@page "/category/add"
@page "/category/edit/{categoryId:int}"
@using Domain.Material
@using SharedProject.Dtos

@inject HttpClient Http
@inject NavigationManager NavigationManager
 

<EditForm Model="@category" OnValidSubmit="Add">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="category.Name" />
        </div>
        <ValidationMessage For="@(() => category.Name )" />
    </div>
    <div class="mb-3">
        <a href='/category/edit/@category.Id' class="btn btn-outline-dark" role="button">
            Edit
        </a>
    </div>
    <div class="mb-3">
        <a href='/category/edit/@category.Id' class="btn btn-outline-dark" role="button"> Delete </a>
    </div>
   
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>

</EditForm>


@code {
    [Parameter]
    public int categoryId { get; set; }
    protected string Title = "Add";
    protected CategoryDto category = new();
    protected override async Task OnParametersSetAsync()
    {
        if (categoryId != 0)
        {
            Title = "Edit";
            category = await Http.GetFromJsonAsync<CategoryDto>("api/category/get-By-Id" + categoryId);
        }
    }
    protected async Task Add()
    {
        if (category.Id != 0)
        {
            await Http.PutAsJsonAsync("api/category", category);
        }
        else
        {
            await Http.PostAsJsonAsync("api/category", category);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/categories");
    }
}